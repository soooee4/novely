{"version":3,"file":"static/js/503.01157a10.chunk.js","mappings":"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","sources":["components/popup/AuthorWirteNovPopup.js","components/popup/AuthorWriteIntroPopup.js","pages/AuthorMyNov.js","../node_modules/@mui/icons-material/esm/Close.js","../node_modules/@mui/icons-material/esm/Favorite.js","../node_modules/@mui/icons-material/esm/FavoriteBorder.js","../node_modules/@mui/icons-material/esm/Pets.js","../node_modules/@mui/icons-material/esm/Search.js","../node_modules/@mui/icons-material/esm/ThumbUpAlt.js","../node_modules/@mui/icons-material/esm/ThumbUpOffAlt.js"],"sourcesContent":["// React Package Module\r\nimport { useState } from \"react\";\r\n\r\n// MUI Package Module\r\nimport { Box, Typography, styled } from \"@mui/material\";\r\n\r\n// Control Component\r\nimport Buttons from \"components/controls/Button\";\r\nimport Inputs from \"components/controls/Input\";\r\n\r\n// Constant\r\nimport { CODE, LABEL, COLOR, MESSAGE } from \"common\";\r\n\r\n/** STYLE 정의 */\r\n// 전체 영역\r\nconst Wrapper = styled(Box)({\r\n\twidth: \"100%\",\r\n\theight: \"100%\",\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\tpadding: \"0 3%\",\r\n\tboxSizing: \"border-box\",\r\n\tmarinTop: \"-30px\",\r\n});\r\n\r\nconst WholeBox = styled(Box)({\r\n\twidth: \"100%\",\r\n\theight: \"100%\",\r\n\tdisplay: \"flex\",\r\n\tgap: 20,\r\n\tmarginTop: 20,\r\n\tboxSizing: \"border-box\",\r\n});\r\n\r\nconst WriteBox = styled(Box)({\r\n\tflex: 1,\r\n\theight: \"100%\",\r\n\tboxSizing: \"border-box\",\r\n  padding: 15,\r\n  paddingRight: 5,\r\n  borderRadius: 10,\r\n\tborder: `1px solid ${COLOR.GRAY}`,\r\n\r\n\r\n  '&>textarea::-webkit-scrollbar': {\r\n    width: 5, \r\n  },\r\n  '&>textarea::-webkit-scrollbar-thumb': {\r\n    background: '#aaa',\r\n    borderRadius: 5,\r\n  },\r\n  '&>textarea::-webkit-scrollbar-track': {\r\n    backgroundColor: 'transparent',\r\n  },\r\n\r\n});\r\n\r\n// 제목, 이어쓰기 버튼 영역\r\nconst HeaderBox = styled(Box)({\r\n\twidth: \"100%\",\r\n\tdisplay: \"flex\",\r\n\tboxSizing: \"border-box\",\r\n});\r\n\r\n// 글자수 표시 영역\r\nconst CountText = styled(Typography)({\r\n  fontSize: 13,\r\n  margin: \"3px 5px 0px auto\"\r\n});\r\n\r\nconst writeNovText = (color) => {\r\n  return (\r\n    {\r\n      paddingRight: 10,\r\n      border:'none',\r\n      width: \"100%\",\r\n      height: \"100%\",\r\n      resize: \"none\",\r\n      outline: \"none\",\r\n      fontSize: 17,\r\n      boxSizing: \"border-box\",\r\n      backgroundColor: color,\r\n      color: color === \"#121212\" ? \"white\" : \"black\"\r\n    }\r\n  )\r\n};\r\n\r\n\r\n/** 작가 권한일 시 메인 소설을 쓰는 컴포넌트 (내 작품 페이지에서 새 소설 쓰기 버튼 클릭 시 해당 팝업 띄워줌) */\r\nconst AuthorWriteNovPopup = (props) => {\r\n\tconst [title, setTitle] = useState(\"\"); \t// 소설 제목\r\n\tconst [content, setContent] = useState(\"\"); // 소설 내용\r\n  const [contentCount, setContentCount] = useState(0) // 내용 글자수 체크\r\n\r\n\t// 저장 후 다음 버튼 눌렀을 때 AuthorMyNov 페이지에 있는 (서버로 보낼) 상태값에 데이터 세팅\r\n\tconst postAuthorNovel = () => {\r\n\t\tprops.setTitleContent({\r\n\t\t\ttitle: title,\r\n\t\t\tcontent: content,\r\n\t\t});\r\n\t};\r\n\r\n\tconst inputTitle = (e) => {\r\n\t\tsetTitle(e.target.value);\r\n\t};\r\n\r\n\tconst inputContent = (e) => {\r\n\t\tsetContent(e.target.value);\r\n    setContentCount(e.target.value.length);\r\n\t};\r\n\r\n\tconst goToNext = () => {\r\n\t\tif (title === \"\") {\r\n\t\t\talert(MESSAGE.ERROR.WRITE_TITLE);\r\n\t\t\treturn;\r\n\t\t} else if (content === \"\") {\r\n\t\t\talert(MESSAGE.ERROR.WRITE_CONTENT);\r\n\t\t\treturn;\r\n\t\t} else if (title.length > 50) {\r\n\t\t\talert(MESSAGE.ERROR.TITLE_INVALIDATION);\r\n\t\t\treturn; \r\n    } else {\r\n\t\t\tprops.changeState();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<HeaderBox>\r\n\t\t\t\t<Inputs\r\n\t\t\t\t\tfullWidth\r\n\t\t\t\t\tonChange={inputTitle}\r\n\t\t\t\t\tsx={{ width: \"70%\" }}\r\n\t\t\t\t\tcolor={props.color}\r\n          maxLength={50}\r\n\t\t\t\t/>\r\n\t\t\t\t<Buttons\r\n\t\t\t\t\ttype={CODE.BUTTON.BASIC}\r\n\t\t\t\t\tcolor={props.color === \"#121212\" ? COLOR.WHITE : COLOR.BLACK}\r\n\t\t\t\t\tname={LABEL.BUTTONS.GOTONEXT}\r\n\t\t\t\t\tmargin={\"-17px 0px 0px auto\"}\r\n\t\t\t\t\tpostAuthorNovel={postAuthorNovel}\r\n\t\t\t\t\tgoToNext={goToNext}\r\n\t\t\t\t/>\r\n\t\t\t</HeaderBox>\r\n\t\t\t<WholeBox>\r\n\t\t\t\t<WriteBox>\r\n\t\t\t\t\t<textarea \r\n            style={writeNovText(props.color)} \r\n            onChange={inputContent} \r\n            maxLength={10000}\r\n          />\r\n\t\t\t\t</WriteBox>\r\n\t\t\t</WholeBox>\r\n\t\t\t{contentCount === 10000 ? (\r\n\t\t\t\t<CountText style={{ color: \"red\" }}>{contentCount}/10000</CountText>\r\n\t\t\t) : (\r\n\t\t\t\t<CountText>{contentCount}/10000</CountText>\r\n\t\t\t)}\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default AuthorWriteNovPopup;","// React Package Module\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// MUI Package Module\r\nimport { Box, styled, Typography } from \"@mui/material\";\r\n\r\n// Control Component\r\nimport Buttons from \"components/controls/Button\";\r\n\r\n// Constant\r\nimport { CODE, LABEL, COLOR, MESSAGE } from \"common\";\r\n\r\n/** STYLE 정의 */\r\n// 전체 영역\r\nconst Wrapper = styled(Box)({\r\n\twidth: \"100%\",\r\n\theight: \"100%\",\r\n\tdisplay: \"flex\",\r\n\tflexDirection: \"column\",\r\n\tpadding: \"0 3%\",\r\n\tboxSizing: \"border-box\",\r\n\tmarinTop: \"-30px\",\r\n});\r\n\r\n//textarea 영역\r\nconst writeNovText = (color) => {\r\n  return ( \r\n    {\r\n      width: \"100%\",\r\n      height: \"80%\",\r\n      resize: \"none\",\r\n      outline: \"none\",\r\n      borderRadius: 10,\r\n      padding: 20,\r\n      fontSize: 15,\r\n      boxSizing: \"border-box\",\r\n      marginBottom: 20,\r\n      backgroundColor: color,\r\n      color: color === \"#121212\" ? \"white\" : \"black\"\r\n    }\r\n  )\r\n};\r\n\r\nconst IntroMsg = styled(Typography)({\r\n\tfontSize: 18,\r\n\tfontWeight: \"bolder\",\r\n\ttextAlign: \"center\",\r\n\tmarginBottom: 30,\r\n});\r\n\r\n/** 작가 권한일 시 메인 소설 작성 후 소설 소개를 쓰는 컴포넌트 (내 작품 페이지에서 새 소설 쓰기 버튼, 작성 후 다음 버튼 클릭 시 해당 팝업 띄워줌) */\r\nconst AuthorWriteIntroPopup = (props) => {\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst inputDescription = (e) => {\r\n\t\tprops.setDescription(e.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t<Buttons\r\n\t\t\t\tpostMainNovel={props.postMainNovel}\r\n\t\t\t\ttype={CODE.BUTTON.BASIC}\r\n\t\t\t\tbackgroundColor={COLOR.WHITE}\r\n\t\t\t\tcolor={props.color === \"#121212\" ? COLOR.WHITE : COLOR.BLACK}\r\n\t\t\t\tname={LABEL.BUTTONS.SUBMIT}\r\n\t\t\t\tmargin={\"10px -5px 0px auto\"}\r\n\t\t\t\tnavigate={() => navigate(\"/author_myNovel\")}\r\n\t\t\t/>\r\n\t\t\t<IntroMsg>{MESSAGE.WRITE_NOVEL_INTRO}</IntroMsg>\r\n\t\t\t<textarea style={writeNovText(props.color)} onChange={inputDescription} />\r\n\t\t</Wrapper>\r\n\t);\r\n};\r\n\r\nexport default AuthorWriteIntroPopup;","// React Package Module\r\nimport { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// MUI Package Module\r\nimport { styled, Box } from \"@mui/material\";\r\n\r\n// Content Component\r\nimport NovelCard from \"components/contents/NovelCard\";\r\n\r\n// Control Component\r\nimport Buttons from \"components/controls/Button\";\r\n\r\n// Popup Component\r\nimport AuthorWriteNovPopup from \"../components/popup/AuthorWirteNovPopup\";\r\nimport AuthorWriteIntroPopup from \"../components/popup/AuthorWriteIntroPopup\";\r\nimport ModalPopup from \"components/popup/ModalPopup\";\r\n\r\n// Constant\r\nimport { CODE, LABEL, COLOR, MESSAGE } from \"common\";\r\n\r\n//util\r\nimport { modalWidth, modalHeight, modalColorMode } from \"common/util\";\r\n\r\n// API\r\nimport { getData, postData } from \"common/communication\";\r\n\r\n/** STYLE 정의 */\r\n// 헤더 제외 영역\r\nconst MainBox = styled(Box)({\r\n  width: \"80%\",\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  margin: \"0 auto\",\r\n});\r\n\r\n// 소설 컴포넌트 카드 영역\r\nconst NovelCardBox = styled(Box)({\r\n  flexGrow: 1,\r\n  width: \"100%\",\r\n  margin: \"0 auto\",\r\n  display: \"flex\",\r\n  flexWrap: \"wrap\",\r\n  boxSizing: \"border-box\",\r\n});\r\n\r\n// 소설 구분 버튼 박스\r\nconst DivNovelBtn = styled(Box)({\r\n  display: \"flex\",\r\n  minHeight: 40,\r\n});\r\n\r\n/** 작가 권한일 경우 헤더의 내 작품 클릭 시 나오는 페이지 */\r\nconst AuthorMyNov = () => {\r\n\t/** STATE 정의\r\n\t * completeNovData: 로그인한 작가의 완성 소설 데이터\r\n\t * inCompleteNovData: 로그인한 작가의 미완성 소설 데이터\r\n\t * profile: 로컬스토리지에 저장된 프로필\r\n\t */\r\n\tconst [completeNovData, setCompleteNovData] = useState([]); \t\t// 로그인한 작가의 완성 소설 데이터\r\n\tconst [incompleteNovData, setIncompleteNovData] = useState([]); \t// 로그인한 작가의 미완성 소설 데이터\r\n\tconst [profile, setProfile] = useState(\r\n\t\tJSON.parse(localStorage.getItem(\"profile\"))\r\n\t); \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// 로컬스토리지에 저장된 사용자 프로필\r\n\tconst [isComplete, setIsComplete] = useState(true); \t\t\t\t// 소설 완성 여부\r\n\tconst [selectedTab, setSelectedTab] = useState(\"complete\"); \t\t// 선택된 메뉴\r\n\tconst [modal, setModal] = useState(false); \t\t\t\t\t\t\t// 모달 open 여부\r\n\tconst [popup, setPopup] = useState(\"\"); \t\t\t\t\t\t\t// popup 상태값\r\n  \tconst [color, setColor] = useState(\"#ffffff\");                  \t// 배경색 모드\r\n\r\n\t// 메인 소설 서버로 post하기 위한 데이터 세팅\r\n\tconst [regditMainNovData, setRegditMainNovData] = useState({\r\n\t\ttitle: null,\r\n\t\tcontent: null,\r\n\t\tdescription: null,\r\n\t\tcreated_user: profile.login_id,\r\n\t});\r\n\r\n\t// AuthorWriteNovPopup에서 받아온 title, content 세팅 함수\r\n\tconst setTitleContent = (data) => {\r\n\t\tsetRegditMainNovData((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\ttitle: data.title,\r\n\t\t\tcontent: data.content,\r\n\t\t}));\r\n\t};\r\n\r\n\t// AuthorWriteIntroPopup에서 받아온 description 세팅 함수\r\n\tconst setDescription = (data) => {\r\n\t\tsetRegditMainNovData((prevState) => ({\r\n\t\t\t...prevState,\r\n\t\t\tdescription: data,\r\n\t\t}));\r\n\t};\r\n\r\n\t// 렌더링 시 소설 데이터 조회\r\n\tuseEffect(() => {\r\n\t\tgetMyCompleteNovel();\r\n\t}, []);\r\n\r\n  // 완성 소설의 메인 작가, 서브 작가 아이디 중 로그인 아이디와 일치하는 소설 가져오기\r\n  const getMyCompleteNovel = () => {\r\n    getData(\"novel/getNovels\", { user_id: profile.login_id })\r\n\t\t\t.then((data) => {\r\n\t\t\t\tsetCompleteNovData(\r\n\t\t\t\t\tdata.filter((novel) => novel.main_author_id === profile.login_id || novel.sub_author_id === profile.login_id)\r\n\t\t\t\t);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n  };\r\n\r\n\t// 미완성 소설 중 로그인 아이디가 작성한 소설 가져오기\r\n\tconst getMyIncompleteNovel = () => {\r\n\t\tgetData(\"novel/getAuthorNovel\", {\r\n\t\t\tcreated_user: profile.login_id,\r\n\t\t\tlogin_id: profile.login_id,\r\n\t\t})\r\n\t\t\t.then(function (data) {\r\n\t\t\t\tsetIncompleteNovData(data.novel_data);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// 상세정보 페이지로 클릭한 novel 정보 보내기\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst goToDetail = (novel) => {\r\n\t\tnavigate(\"/novel_detail\", { state: { props: novel } });\r\n\t};\r\n\r\n\t// Modal OPEN/CLOSE\r\n\tconst showModal = () => {\r\n\t\tsetModal(true);\r\n\t};\r\n\r\n\tconst closeModal = () => {\r\n\t\tsetModal(false);\r\n\t};\r\n\r\n\t// 메인소설 등록 함수\r\n\tconst postMainNovel = () => {\r\n    if (regditMainNovData.description.length === 0) {\r\n      alert(MESSAGE.ERROR.WRITE_DESCRIPTION);\r\n      return;\r\n    } else if (regditMainNovData.description.length >= 100) {\r\n      alert(MESSAGE.ERROR.DESC_INVALIDATION); \r\n      return;\r\n    }\r\n\r\n\t\tpostData(\"novel/postMainNovel\", {\r\n\t\t\ttitle: regditMainNovData.title,\r\n\t\t\tcontent: regditMainNovData.content,\r\n\t\t\tdescription: regditMainNovData.description,\r\n\t\t\tcreated_user: profile.login_id,\r\n\t\t})\r\n\t\t\t.then((msg) => {\r\n\t\t\t\talert(msg);\r\n\t\t\t\tcloseModal();\r\n\t\t\t\tgetMyIncompleteNovel();\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\tconsole.log(err);\r\n\t\t\t});\r\n\t};\r\n\r\n\t// 팝업 상태값 변경\r\n\tconst popupChange = () => {\r\n\t\tif (popup === \"authorWriteNov\") {\r\n\t\t\treturn (\r\n\t\t\t\t<AuthorWriteNovPopup\r\n\t\t\t\t\tsetTitleContent={(data) => setTitleContent(data)}\r\n\t\t\t\t\tchangeState={() => setPopup(\"authorWriteIntro\")}\r\n          \t\t\tcolor={color}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t} else if (popup === \"authorWriteIntro\") {\r\n\t\t\treturn (\r\n\t\t\t\t<AuthorWriteIntroPopup\r\n\t\t\t\t\tsetDescription={(data) => setDescription(data)}\r\n\t\t\t\t\tregditMainNovData={regditMainNovData}\r\n\t\t\t\t\tprofile={profile}\r\n\t\t\t\t\tpostMainNovel={() => postMainNovel()}\r\n          \t\t\tcolor={color}\r\n\t\t\t\t/>\r\n\t\t\t);\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<MainBox>\r\n\t\t\t\t<DivNovelBtn>\r\n\t\t\t\t\t<Buttons\r\n\t\t\t\t\t\ttype={CODE.BUTTON.BASIC}\r\n\t\t\t\t\t\tbackgroundColor={COLOR.WHITE}\r\n\t\t\t\t\t\tcolor={COLOR.BLACK}\r\n\t\t\t\t\t\tfontWeight={selectedTab === \"complete\" && \"bolder\"}\r\n\t\t\t\t\t\tname={LABEL.BUTTONS.COMPLETE}\r\n\t\t\t\t\t\tisComplete={() => setIsComplete(true)}\r\n\t\t\t\t\t\tsetSelectedTab={() => setSelectedTab(\"complete\")}\r\n            \t\t\tgetMyCompleteNovel={getMyCompleteNovel}\r\n\t\t\t\t\t\tpadding={0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpaddingTop: 8,\r\n\t\t\t\t\t\t\tmarginLeft: 8,\r\n\t\t\t\t\t\t\tmarginRight: 8,\r\n\t\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t|\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<Buttons\r\n\t\t\t\t\t\ttype={CODE.BUTTON.BASIC}\r\n\t\t\t\t\t\tbackgroundColor={COLOR.WHITE}\r\n\t\t\t\t\t\tcolor={COLOR.BLACK}\r\n\t\t\t\t\t\tfontWeight={selectedTab === \"incomplete\" && \"bolder\"}\r\n\t\t\t\t\t\tname={LABEL.BUTTONS.IN_COMPLETE}\r\n\t\t\t\t\t\tisComplete={() => setIsComplete(false)}\r\n\t\t\t\t\t\tsetSelectedTab={() => setSelectedTab(\"incomplete\")}\r\n            \t\t\tgetMyIncompleteNovel={getMyIncompleteNovel}\r\n\t\t\t\t\t\tpadding={0}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpaddingTop: 8,\r\n\t\t\t\t\t\t\tmarginLeft: 8,\r\n\t\t\t\t\t\t\tmarginRight: 8,\r\n\t\t\t\t\t\t\tdisplay: \"inline-block\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t|\r\n\t\t\t\t\t</span>\r\n\t\t\t\t\t<Buttons\r\n\t\t\t\t\t\ttype={CODE.BUTTON.BASIC}\r\n\t\t\t\t\t\tbackgroundColor={COLOR.WHITE}\r\n\t\t\t\t\t\tcolor={COLOR.BLACK}\r\n\t\t\t\t\t\tname={LABEL.BUTTONS.WRITE_NOVEL}\r\n\t\t\t\t\t\tpadding={0}\r\n\t\t\t\t\t\tpopupChange={popupChange}\r\n\t\t\t\t\t\tshowModal={showModal}\r\n\t\t\t\t\t\tchangeState={() => setPopup(\"authorWriteNov\")}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</DivNovelBtn>\r\n\r\n\t\t\t\t<NovelCardBox>\r\n\t\t\t\t\t{incompleteNovData &&\r\n\t\t\t\t\t\tisComplete === false &&\r\n\t\t\t\t\t\tincompleteNovData.map((list) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<NovelCard\r\n\t\t\t\t\t\t\t\t\tkey={list.main_seqno}\r\n\t\t\t\t\t\t\t\t\ttitle={list.title}\r\n\t\t\t\t\t\t\t\t\tdescription={list.description}\r\n\t\t\t\t\t\t\t\t\tcreated_date={list.created_date}\r\n\t\t\t\t\t\t\t\t\tcreated_user={list.created_user}\r\n                  \t\t\t\t\tcover_image={list.cover_image}\r\n\t\t\t\t\t\t\t\t\tonClick={() => goToDetail(list)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t{completeNovData && isComplete &&\r\n\t\t\t\t\t\tcompleteNovData.map((list) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<NovelCard\r\n\t\t\t\t\t\t\t\t\tkey={list.complete_seqno}\r\n\t\t\t\t\t\t\t\t\ttitle={list.complete_novel_title}\r\n\t\t\t\t\t\t\t\t\tgenre_1={list.genre_1}\r\n\t\t\t\t\t\t\t\t\tgenre_2={list.genre_2}\r\n\t\t\t\t\t\t\t\t\tkeyword_1={list.keyword_1}\r\n\t\t\t\t\t\t\t\t\tkeyword_2={list.keyword_2}\r\n\t\t\t\t\t\t\t\t\tkeyword_3={list.keyword_3}\r\n\t\t\t\t\t\t\t\t\tgenre_1_color={list.genre_1_color}\r\n\t\t\t\t\t\t\t\t\tgenre_2_color={list.genre_2_color}\r\n\t\t\t\t\t\t\t\t\tkeyword_1_color={list.keyword_1_color}\r\n\t\t\t\t\t\t\t\t\tkeyword_2_color={list.keyword_2_color}\r\n\t\t\t\t\t\t\t\t\tkeyword_3_color={list.keyword_3_color}\r\n\t\t\t\t\t\t\t\t\tdescription={list.description}\r\n\t\t\t\t\t\t\t\t\tlike_count={list.like_count}\r\n\t\t\t\t\t\t\t\t\tcreated_date={list.created_date}\r\n                  \t\t\t\t\tcover_image={list.cover_image}\r\n\t\t\t\t\t\t\t\t\tonClick={() => goToDetail(list)}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</NovelCardBox>\r\n\t\t\t</MainBox>\r\n\t\t\t<ModalPopup\r\n\t\t\t\tfullWidth\r\n\t\t\t\topen={modal}\r\n\t\t\t\twidth={modalWidth(popup)}\r\n\t\t\t\tonClose={closeModal}\r\n\t\t\t\theight={modalHeight(popup)}\r\n\t\t\t\tmode={modalColorMode(popup)}\r\n\t\t\t\tsetColor={(data) => setColor(data)}\r\n\t\t\t\tsetColorInit={() => setColor(\"#ffffff\")}\r\n\t\t\t>\r\n\t\t\t\t{popupChange()}\r\n\t\t\t</ModalPopup>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default AuthorMyNov;","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n}), 'Close');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54L12 21.35z\"\n}), 'Favorite');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.5 3c-1.74 0-3.41.81-4.5 2.09C10.91 3.81 9.24 3 7.5 3 4.42 3 2 5.42 2 8.5c0 3.78 3.4 6.86 8.55 11.54L12 21.35l1.45-1.32C18.6 15.36 22 12.28 22 8.5 22 5.42 19.58 3 16.5 3zm-4.4 15.55-.1.1-.1-.1C7.14 14.24 4 11.39 4 8.5 4 6.5 5.5 5 7.5 5c1.54 0 3.04.99 3.57 2.36h1.87C13.46 5.99 14.96 5 16.5 5c2 0 3.5 1.5 3.5 3.5 0 2.89-3.14 5.74-7.9 10.05z\"\n}), 'FavoriteBorder');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"circle\", {\n  cx: \"4.5\",\n  cy: \"9.5\",\n  r: \"2.5\"\n}, \"0\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"9\",\n  cy: \"5.5\",\n  r: \"2.5\"\n}, \"1\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"15\",\n  cy: \"5.5\",\n  r: \"2.5\"\n}, \"2\"), /*#__PURE__*/_jsx(\"circle\", {\n  cx: \"19.5\",\n  cy: \"9.5\",\n  r: \"2.5\"\n}, \"3\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"M17.34 14.86c-.87-1.02-1.6-1.89-2.48-2.91-.46-.54-1.05-1.08-1.75-1.32-.11-.04-.22-.07-.33-.09-.25-.04-.52-.04-.78-.04s-.53 0-.79.05c-.11.02-.22.05-.33.09-.7.24-1.28.78-1.75 1.32-.87 1.02-1.6 1.89-2.48 2.91-1.31 1.31-2.92 2.76-2.62 4.79.29 1.02 1.02 2.03 2.33 2.32.73.15 3.06-.44 5.54-.44h.18c2.48 0 4.81.58 5.54.44 1.31-.29 2.04-1.31 2.33-2.32.31-2.04-1.3-3.49-2.61-4.8z\"\n}, \"4\")], 'Pets');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\"\n}), 'Search');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M2 20h2c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1H2v11zm19.83-7.12c.11-.25.17-.52.17-.8V11c0-1.1-.9-2-2-2h-5.5l.92-4.65c.05-.22.02-.46-.08-.66-.23-.45-.52-.86-.88-1.22L14 2 7.59 8.41C7.21 8.79 7 9.3 7 9.83v7.84C7 18.95 8.05 20 9.34 20h8.11c.7 0 1.36-.37 1.72-.97l2.66-6.15z\"\n}), 'ThumbUpAlt');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"m13.11 5.72-.57 2.89c-.12.59.04 1.2.42 1.66.38.46.94.73 1.54.73H20v1.08L17.43 18H9.34c-.18 0-.34-.16-.34-.34V9.82l4.11-4.1M14 2 7.59 8.41C7.21 8.79 7 9.3 7 9.83v7.83C7 18.95 8.05 20 9.34 20h8.1c.71 0 1.36-.37 1.72-.97l2.67-6.15c.11-.25.17-.52.17-.8V11c0-1.1-.9-2-2-2h-5.5l.92-4.65c.05-.22.02-.46-.08-.66-.23-.45-.52-.86-.88-1.22L14 2zM4 9H2v11h2c.55 0 1-.45 1-1v-9c0-.55-.45-1-1-1z\"\n}), 'ThumbUpOffAlt');"],"names":["Wrapper","styled","Box","width","height","display","flexDirection","padding","boxSizing","marinTop","WholeBox","gap","marginTop","WriteBox","flex","paddingRight","borderRadius","border","concat","COLOR","GRAY","background","backgroundColor","HeaderBox","CountText","Typography","fontSize","margin","props","title","setTitle","useState","content","setContent","contentCount","setContentCount","_jsxs","children","_jsx","Inputs","fullWidth","onChange","e","target","value","sx","color","maxLength","Buttons","type","CODE","BUTTON","BASIC","WHITE","BLACK","name","LABEL","BUTTONS","GOTONEXT","postAuthorNovel","setTitleContent","goToNext","length","alert","MESSAGE","ERROR","TITLE_INVALIDATION","changeState","WRITE_CONTENT","WRITE_TITLE","style","resize","outline","IntroMsg","fontWeight","textAlign","marginBottom","navigate","useNavigate","postMainNovel","SUBMIT","WRITE_NOVEL_INTRO","setDescription","MainBox","NovelCardBox","flexGrow","flexWrap","DivNovelBtn","minHeight","AuthorMyNov","completeNovData","setCompleteNovData","incompleteNovData","setIncompleteNovData","profile","setProfile","JSON","parse","localStorage","getItem","isComplete","setIsComplete","selectedTab","setSelectedTab","modal","setModal","popup","setPopup","setColor","regditMainNovData","setRegditMainNovData","description","created_user","login_id","useEffect","getMyCompleteNovel","getData","user_id","then","data","filter","novel","main_author_id","sub_author_id","catch","err","console","log","getMyIncompleteNovel","novel_data","goToDetail","state","closeModal","popupChange","AuthorWriteNovPopup","prevState","AuthorWriteIntroPopup","DESC_INVALIDATION","postData","msg","WRITE_DESCRIPTION","_Fragment","COMPLETE","paddingTop","marginLeft","marginRight","IN_COMPLETE","WRITE_NOVEL","showModal","map","list","NovelCard","created_date","cover_image","onClick","main_seqno","complete_novel_title","genre_1","genre_2","keyword_1","keyword_2","keyword_3","genre_1_color","genre_2_color","keyword_1_color","keyword_2_color","keyword_3_color","like_count","complete_seqno","ModalPopup","open","modalWidth","onClose","modalHeight","mode","modalColorMode","setColorInit","createSvgIcon","d","cx","cy","r"],"sourceRoot":""}